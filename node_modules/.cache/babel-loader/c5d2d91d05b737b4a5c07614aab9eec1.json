{"ast":null,"code":"var _jsxFileName = \"/Users/nancy/project/react-success/react-hook/src/layout/BaseLayout.js\";\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { Layout } from 'antd';\nimport menuConfig from '../menuConfig';\nimport HeadMenu from '../component/HeadMenu';\nimport SideMenu from '../component/SideMenu';\nconst {\n  Header,\n  Content,\n  Sider\n} = Layout;\nexport const BaseLayout = ({\n  location,\n  children,\n  loginStatus\n}) => {\n  const {\n    pathname\n  } = location;\n  const [menuInfo, setMenuInfo] = useState({});\n  const [subMenu, setSubMenu] = useState([]);\n  const [selectPath, setSelectPath] = useState('');\n  const [currentPath, setCurrentPath] = useState('');\n\n  const pathChange = (pathname, data, type) => {\n    const dataMenu = data;\n\n    if (type === 'main') {\n      dataMenu.mainMenu.forEach(item => {\n        if (pathname.indexOf(item.path) > -1) {\n          setSubMenu(item.children);\n          dataMenu.selectMainMenu = item;\n          dataMenu.paths = item;\n          dataMenu.prePath = '/' + item.path;\n          dataMenu.subMenu = item.children;\n        }\n      });\n    }\n\n    if (type === 'sub') {\n      dataMenu.subMenu.forEach(item => {\n        if (pathname.indexOf(item.path) > -1) {\n          dataMenu.selectSubMenu = item;\n        }\n      });\n    }\n\n    if (type === 'tab') {\n      dataMenu.mainMenu.forEach(item => {\n        if (pathname.indexOf(item.path) > -1) {\n          setSubMenu(item.children);\n          dataMenu.selectMainMenu = item;\n          dataMenu.paths = item;\n          dataMenu.prePath = '/' + item.path;\n          dataMenu.subMenu = item.children;\n          dataMenu.selectSubMenu = item.children[0];\n        }\n      });\n    }\n\n    return dataMenu;\n  }; // 菜单信息随着路径变化\n\n\n  useEffect(() => {\n    pathChange(pathname, menuConfig, 'main');\n    const newInfo = pathChange(pathname, menuConfig, 'sub');\n    setMenuInfo(newInfo);\n    setSelectPath(`${newInfo.selectMainMenu.path}`);\n    setCurrentPath(`${newInfo.prePath}/${newInfo.selectSubMenu.path}`);\n  }, [pathname]);\n  const loginPath = '/login';\n  const redirectUrl = pathname === loginPath ? '/' : pathname;\n  useEffect(() => {\n    // <!--校验是否登陆-->\n    if (loginStatus) {\n      Router.push(redirectUrl);\n    } else {\n      history.push('/login', {\n        redirectUrl\n      });\n    }\n  }, []);\n\n  if (pathname === '/login') {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 16\n      }\n    }, children);\n  }\n\n  const handleClick = value => {\n    const {\n      key\n    } = value;\n    const newInfo = pathChange(pathname, menuConfig, 'tab');\n    setMenuInfo(newInfo);\n    setSelectPath(key);\n  };\n\n  const handleSiderClick = value => {\n    const {\n      key\n    } = value;\n    const newInfo = pathChange(pathname, menuConfig, 'sub');\n    setMenuInfo(newInfo);\n    setCurrentPath(key);\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(HeadMenu, {\n    menuInfo: menuInfo,\n    handleClick: handleClick,\n    selectPath: selectPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sider, {\n    width: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SideMenu, {\n    menuInfo: menuInfo,\n    subMenu: subMenu,\n    handleSiderClick: handleSiderClick,\n    currentPath: currentPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, children))));\n};\nBaseLayout.propTypes = {\n  location: PropTypes.object\n};","map":{"version":3,"sources":["/Users/nancy/project/react-success/react-hook/src/layout/BaseLayout.js"],"names":["PropTypes","React","useState","useEffect","Layout","menuConfig","HeadMenu","SideMenu","Header","Content","Sider","BaseLayout","location","children","loginStatus","pathname","menuInfo","setMenuInfo","subMenu","setSubMenu","selectPath","setSelectPath","currentPath","setCurrentPath","pathChange","data","type","dataMenu","mainMenu","forEach","item","indexOf","path","selectMainMenu","paths","prePath","selectSubMenu","newInfo","loginPath","redirectUrl","Router","push","history","handleClick","value","key","handleSiderClick","propTypes","object"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport React, { useState, useEffect } from 'react';\nimport {Layout} from 'antd'\nimport menuConfig from '../menuConfig'\nimport HeadMenu from '../component/HeadMenu';\nimport SideMenu from '../component/SideMenu';\nconst { Header, Content, Sider } = Layout;\nexport const BaseLayout = ({ location, children, loginStatus}) => {\n    const {pathname } = location;\n\n    const [menuInfo, setMenuInfo] = useState({});\n    const [subMenu, setSubMenu] = useState([]);\n    const [selectPath, setSelectPath] = useState('');\n    const [currentPath, setCurrentPath] = useState('');\n\n    const pathChange = (pathname, data, type) => {\n        const dataMenu = data\n        if(type === 'main' ) {\n            dataMenu.mainMenu.forEach(item => {\n                if(pathname.indexOf(item.path) > -1) {\n                    setSubMenu(item.children)\n                    dataMenu.selectMainMenu = item\n                    dataMenu.paths = item\n                    dataMenu.prePath = '/' + item.path\n                    dataMenu.subMenu = item.children\n                }\n            })\n        }\n        if( type === 'sub') {\n            dataMenu.subMenu.forEach(item => {\n                if(pathname.indexOf(item.path) > -1) {\n                    dataMenu.selectSubMenu = item\n                }\n            })\n        }\n\n        if( type === 'tab') {\n            dataMenu.mainMenu.forEach(item => {\n                if(pathname.indexOf(item.path) > -1) {\n                    setSubMenu(item.children)\n                    dataMenu.selectMainMenu = item\n                    dataMenu.paths = item\n                    dataMenu.prePath = '/' + item.path\n                    dataMenu.subMenu = item.children\n                    dataMenu.selectSubMenu = item.children[0]\n                }\n            })\n        }\n\n        return dataMenu\n    }\n    // 菜单信息随着路径变化\n    useEffect(() => {\n        pathChange(pathname, menuConfig, 'main');\n        const newInfo = pathChange(pathname, menuConfig, 'sub');\n        setMenuInfo(newInfo);\n        setSelectPath(`${newInfo.selectMainMenu.path}`)\n        setCurrentPath(`${newInfo.prePath}/${newInfo.selectSubMenu.path}`)\n    }, [pathname]);\n\n    const loginPath = '/login';\n    const redirectUrl = pathname === loginPath ? '/' : pathname;\n\n    useEffect(() => {\n        // <!--校验是否登陆-->\n        if (loginStatus) {\n            Router.push(redirectUrl);\n        } else {\n            history.push('/login', {\n                redirectUrl\n            });\n        }\n    }, []);\n\n    if (pathname === '/login') {\n        return <div>{children}</div>;\n    }\n\n    const handleClick = (value) => {\n        const { key } = value\n        const newInfo = pathChange(pathname, menuConfig, 'tab');\n        setMenuInfo(newInfo);\n        setSelectPath(key)\n    }\n\n    const handleSiderClick = (value) => {\n        const { key } = value\n        const newInfo = pathChange(pathname, menuConfig, 'sub');\n        setMenuInfo(newInfo);\n        setCurrentPath(key)\n    }\n\n\n\n    return (\n        <Layout>\n            <Header className=\"header\" >\n                <div className=\"logo\" />\n                <HeadMenu menuInfo={menuInfo} handleClick={ handleClick } selectPath={selectPath}/>\n            </Header>\n            <Content>\n                <Layout>\n                    <Sider width={200}>\n                        <SideMenu menuInfo={menuInfo}\n                                  subMenu={subMenu}\n                                  handleSiderClick={handleSiderClick}\n                                  currentPath={currentPath}/>\n                    </Sider>\n                    <Content>{children}</Content>\n                </Layout>\n            </Content>\n        </Layout>\n    )\n}\nBaseLayout.propTypes={\n    location: PropTypes.object\n}\n"]},"metadata":{},"sourceType":"module"}